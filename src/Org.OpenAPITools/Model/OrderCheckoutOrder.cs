/*
 * Geins Management API
 *
 *  Geins Management API is an RESTful api to power your applications who manages your geins services. Geins provides an easy-to-use and scalable solution for managing all aspects of an online store, from product listings and customer information to order processing and payment transactions.   :::tip With this API, you can build custom applications and integrate with third-party systems, dashboards and other bussiness logic apps. :::    ## Getting started Once you have created an account, you can start using the Management API by creating an `API key`. You can create as many API keys as you need. Each `API key` is connected to a specific account so you can keep track of operations and manage keys. You can find your `API key` in the `geins merchant center`.   ### Fast track Use one of our [SDKs](https://docs.geins.io/docs/sdk/introduction) to get started quickly. The SDKs are available for the most popular programming languages and frameworks.  Or, if you prefer to just take it for a test run:  [![Run in Postman](https://run.pstmn.io/button.svg)](https://god.gw.postman.com/run-collection/25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553?action=collection%2Ffork&collection-url=entityId%3D25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553%26entityType%3Dcollection%26workspaceId%3Da2a179ce-158e-46b0-8d06-e9640f45112c)  ### Authentication Two authentication methods are supported:   - `API Key`   - `Basic Auth` 
 *
 * The version of the OpenAPI document: v1.7
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// OrderCheckoutOrder
    /// </summary>
    [DataContract(Name = "Order.CheckoutOrder")]
    public partial class OrderCheckoutOrder : IEquatable<OrderCheckoutOrder>, IValidatableObject
    {
        /// <summary>
        /// Defines Gender
        /// </summary>
        public enum GenderEnum
        {
            /// <summary>
            /// Enum NUMBER_0 for value: 0
            /// </summary>
            NUMBER_0 = 0,

            /// <summary>
            /// Enum NUMBER_1 for value: 1
            /// </summary>
            NUMBER_1 = 1,

            /// <summary>
            /// Enum NUMBER_2 for value: 2
            /// </summary>
            NUMBER_2 = 2

        }


        /// <summary>
        /// Gets or Sets Gender
        /// </summary>
        [DataMember(Name = "Gender", EmitDefaultValue = false)]
        public GenderEnum? Gender { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderCheckoutOrder" /> class.
        /// </summary>
        /// <param name="orderId">orderId.</param>
        /// <param name="externalOrderId">externalOrderId.</param>
        /// <param name="cartId">cartId.</param>
        /// <param name="sessionId">sessionId.</param>
        /// <param name="siteId">siteId.</param>
        /// <param name="currency">currency.</param>
        /// <param name="status">status.</param>
        /// <param name="ipAddress">ipAddress.</param>
        /// <param name="message">message.</param>
        /// <param name="internalMessage">internalMessage.</param>
        /// <param name="locale">locale.</param>
        /// <param name="rows">rows.</param>
        /// <param name="campaignId">campaignId.</param>
        /// <param name="campaignCode">campaignCode.</param>
        /// <param name="campaignName">campaignName.</param>
        /// <param name="campaignIds">campaignIds.</param>
        /// <param name="campaignNames">campaignNames.</param>
        /// <param name="customerId">customerId.</param>
        /// <param name="customerTypeId">customerTypeId.</param>
        /// <param name="gender">gender.</param>
        /// <param name="dateOfBirth">dateOfBirth.</param>
        /// <param name="personalId">personalId.</param>
        /// <param name="userAgent">userAgent.</param>
        /// <param name="metaData">metaData.</param>
        /// <param name="paymentId">paymentId.</param>
        /// <param name="transactionId">transactionId.</param>
        /// <param name="secondaryTransactionId">secondaryTransactionId.</param>
        /// <param name="country">country.</param>
        /// <param name="company">company.</param>
        /// <param name="organizationNumber">organizationNumber.</param>
        /// <param name="firstName">firstName.</param>
        /// <param name="lastName">lastName.</param>
        /// <param name="email">email.</param>
        /// <param name="address1">address1.</param>
        /// <param name="address2">address2.</param>
        /// <param name="zip">zip.</param>
        /// <param name="city">city.</param>
        /// <param name="region">region.</param>
        /// <param name="phone">phone.</param>
        /// <param name="mobilePhone">mobilePhone.</param>
        /// <param name="careOf">careOf.</param>
        /// <param name="shippingId">shippingId.</param>
        /// <param name="shippingCountry">shippingCountry.</param>
        /// <param name="shippingCompany">shippingCompany.</param>
        /// <param name="shippingOrganizationNumber">shippingOrganizationNumber.</param>
        /// <param name="shippingFirstName">shippingFirstName.</param>
        /// <param name="shippingLastName">shippingLastName.</param>
        /// <param name="shippingEmail">shippingEmail.</param>
        /// <param name="shippingAddress1">shippingAddress1.</param>
        /// <param name="shippingAddress2">shippingAddress2.</param>
        /// <param name="shippingZip">shippingZip.</param>
        /// <param name="shippingCity">shippingCity.</param>
        /// <param name="shippingRegion">shippingRegion.</param>
        /// <param name="shippingPhone">shippingPhone.</param>
        /// <param name="shippingMobilePhone">shippingMobilePhone.</param>
        /// <param name="shippingCareOf">shippingCareOf.</param>
        /// <param name="pickupPoint">pickupPoint.</param>
        /// <param name="desiredDeliveryDate">desiredDeliveryDate.</param>
        /// <param name="freightClass">freightClass.</param>
        /// <param name="expectedSum">expectedSum.</param>
        /// <param name="discountIncVat">discountIncVat.</param>
        /// <param name="discountExVat">discountExVat.</param>
        /// <param name="percentDiscount">percentDiscount.</param>
        /// <param name="balance">balance.</param>
        /// <param name="shippingFeeIncVat">shippingFeeIncVat.</param>
        /// <param name="shippingFeeExVat">shippingFeeExVat.</param>
        /// <param name="paymentFeeIncVat">paymentFeeIncVat.</param>
        /// <param name="paymentFeeExVat">paymentFeeExVat.</param>
        public OrderCheckoutOrder(string orderId = default(string), string externalOrderId = default(string), string cartId = default(string), string sessionId = default(string), int siteId = default(int), string currency = default(string), string status = default(string), string ipAddress = default(string), string message = default(string), string internalMessage = default(string), string locale = default(string), List<OrderCheckoutOrderRow> rows = default(List<OrderCheckoutOrderRow>), int campaignId = default(int), string campaignCode = default(string), string campaignName = default(string), List<string> campaignIds = default(List<string>), List<string> campaignNames = default(List<string>), int customerId = default(int), int customerTypeId = default(int), GenderEnum? gender = default(GenderEnum?), DateTime dateOfBirth = default(DateTime), string personalId = default(string), string userAgent = default(string), Dictionary<string, string> metaData = default(Dictionary<string, string>), int paymentId = default(int), string transactionId = default(string), string secondaryTransactionId = default(string), string country = default(string), string company = default(string), string organizationNumber = default(string), string firstName = default(string), string lastName = default(string), string email = default(string), string address1 = default(string), string address2 = default(string), string zip = default(string), string city = default(string), string region = default(string), string phone = default(string), string mobilePhone = default(string), string careOf = default(string), int shippingId = default(int), string shippingCountry = default(string), string shippingCompany = default(string), string shippingOrganizationNumber = default(string), string shippingFirstName = default(string), string shippingLastName = default(string), string shippingEmail = default(string), string shippingAddress1 = default(string), string shippingAddress2 = default(string), string shippingZip = default(string), string shippingCity = default(string), string shippingRegion = default(string), string shippingPhone = default(string), string shippingMobilePhone = default(string), string shippingCareOf = default(string), string pickupPoint = default(string), DateTime desiredDeliveryDate = default(DateTime), OrderFreightClass freightClass = default(OrderFreightClass), double expectedSum = default(double), double discountIncVat = default(double), double discountExVat = default(double), int percentDiscount = default(int), double balance = default(double), double shippingFeeIncVat = default(double), double shippingFeeExVat = default(double), double paymentFeeIncVat = default(double), double paymentFeeExVat = default(double))
        {
            this.OrderId = orderId;
            this.ExternalOrderId = externalOrderId;
            this.CartId = cartId;
            this.SessionId = sessionId;
            this.SiteId = siteId;
            this.Currency = currency;
            this.Status = status;
            this.IpAddress = ipAddress;
            this.Message = message;
            this.InternalMessage = internalMessage;
            this.Locale = locale;
            this.Rows = rows;
            this.CampaignId = campaignId;
            this.CampaignCode = campaignCode;
            this.CampaignName = campaignName;
            this.CampaignIds = campaignIds;
            this.CampaignNames = campaignNames;
            this.CustomerId = customerId;
            this.CustomerTypeId = customerTypeId;
            this.Gender = gender;
            this.DateOfBirth = dateOfBirth;
            this.PersonalId = personalId;
            this.UserAgent = userAgent;
            this.MetaData = metaData;
            this.PaymentId = paymentId;
            this.TransactionId = transactionId;
            this.SecondaryTransactionId = secondaryTransactionId;
            this.Country = country;
            this.Company = company;
            this.OrganizationNumber = organizationNumber;
            this.FirstName = firstName;
            this.LastName = lastName;
            this.Email = email;
            this.Address1 = address1;
            this.Address2 = address2;
            this.Zip = zip;
            this.City = city;
            this.Region = region;
            this.Phone = phone;
            this.MobilePhone = mobilePhone;
            this.CareOf = careOf;
            this.ShippingId = shippingId;
            this.ShippingCountry = shippingCountry;
            this.ShippingCompany = shippingCompany;
            this.ShippingOrganizationNumber = shippingOrganizationNumber;
            this.ShippingFirstName = shippingFirstName;
            this.ShippingLastName = shippingLastName;
            this.ShippingEmail = shippingEmail;
            this.ShippingAddress1 = shippingAddress1;
            this.ShippingAddress2 = shippingAddress2;
            this.ShippingZip = shippingZip;
            this.ShippingCity = shippingCity;
            this.ShippingRegion = shippingRegion;
            this.ShippingPhone = shippingPhone;
            this.ShippingMobilePhone = shippingMobilePhone;
            this.ShippingCareOf = shippingCareOf;
            this.PickupPoint = pickupPoint;
            this.DesiredDeliveryDate = desiredDeliveryDate;
            this.FreightClass = freightClass;
            this.ExpectedSum = expectedSum;
            this.DiscountIncVat = discountIncVat;
            this.DiscountExVat = discountExVat;
            this.PercentDiscount = percentDiscount;
            this.Balance = balance;
            this.ShippingFeeIncVat = shippingFeeIncVat;
            this.ShippingFeeExVat = shippingFeeExVat;
            this.PaymentFeeIncVat = paymentFeeIncVat;
            this.PaymentFeeExVat = paymentFeeExVat;
        }

        /// <summary>
        /// Gets or Sets OrderId
        /// </summary>
        [DataMember(Name = "OrderId", EmitDefaultValue = false)]
        public string OrderId { get; set; }

        /// <summary>
        /// Gets or Sets ExternalOrderId
        /// </summary>
        [DataMember(Name = "ExternalOrderId", EmitDefaultValue = false)]
        public string ExternalOrderId { get; set; }

        /// <summary>
        /// Gets or Sets CartId
        /// </summary>
        [DataMember(Name = "CartId", EmitDefaultValue = false)]
        public string CartId { get; set; }

        /// <summary>
        /// Gets or Sets SessionId
        /// </summary>
        [DataMember(Name = "SessionId", EmitDefaultValue = false)]
        public string SessionId { get; set; }

        /// <summary>
        /// Gets or Sets SiteId
        /// </summary>
        [DataMember(Name = "SiteId", EmitDefaultValue = false)]
        public int SiteId { get; set; }

        /// <summary>
        /// Gets or Sets Currency
        /// </summary>
        [DataMember(Name = "Currency", EmitDefaultValue = false)]
        public string Currency { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name = "Status", EmitDefaultValue = false)]
        public string Status { get; set; }

        /// <summary>
        /// Gets or Sets IpAddress
        /// </summary>
        [DataMember(Name = "IpAddress", EmitDefaultValue = false)]
        public string IpAddress { get; set; }

        /// <summary>
        /// Gets or Sets Message
        /// </summary>
        [DataMember(Name = "Message", EmitDefaultValue = false)]
        public string Message { get; set; }

        /// <summary>
        /// Gets or Sets InternalMessage
        /// </summary>
        [DataMember(Name = "InternalMessage", EmitDefaultValue = false)]
        public string InternalMessage { get; set; }

        /// <summary>
        /// Gets or Sets Locale
        /// </summary>
        [DataMember(Name = "Locale", EmitDefaultValue = false)]
        public string Locale { get; set; }

        /// <summary>
        /// Gets or Sets Rows
        /// </summary>
        [DataMember(Name = "Rows", EmitDefaultValue = false)]
        public List<OrderCheckoutOrderRow> Rows { get; set; }

        /// <summary>
        /// Gets or Sets CampaignId
        /// </summary>
        [DataMember(Name = "CampaignId", EmitDefaultValue = false)]
        public int CampaignId { get; set; }

        /// <summary>
        /// Gets or Sets CampaignCode
        /// </summary>
        [DataMember(Name = "CampaignCode", EmitDefaultValue = false)]
        public string CampaignCode { get; set; }

        /// <summary>
        /// Gets or Sets CampaignName
        /// </summary>
        [DataMember(Name = "CampaignName", EmitDefaultValue = false)]
        public string CampaignName { get; set; }

        /// <summary>
        /// Gets or Sets CampaignIds
        /// </summary>
        [DataMember(Name = "CampaignIds", EmitDefaultValue = false)]
        public List<string> CampaignIds { get; set; }

        /// <summary>
        /// Gets or Sets CampaignNames
        /// </summary>
        [DataMember(Name = "CampaignNames", EmitDefaultValue = false)]
        public List<string> CampaignNames { get; set; }

        /// <summary>
        /// Gets or Sets CustomerId
        /// </summary>
        [DataMember(Name = "CustomerId", EmitDefaultValue = false)]
        public int CustomerId { get; set; }

        /// <summary>
        /// Gets or Sets CustomerTypeId
        /// </summary>
        [DataMember(Name = "CustomerTypeId", EmitDefaultValue = false)]
        public int CustomerTypeId { get; set; }

        /// <summary>
        /// Gets or Sets DateOfBirth
        /// </summary>
        [DataMember(Name = "DateOfBirth", EmitDefaultValue = false)]
        public DateTime DateOfBirth { get; set; }

        /// <summary>
        /// Gets or Sets PersonalId
        /// </summary>
        [DataMember(Name = "PersonalId", EmitDefaultValue = false)]
        public string PersonalId { get; set; }

        /// <summary>
        /// Gets or Sets UserAgent
        /// </summary>
        [DataMember(Name = "UserAgent", EmitDefaultValue = false)]
        public string UserAgent { get; set; }

        /// <summary>
        /// Gets or Sets MetaData
        /// </summary>
        [DataMember(Name = "MetaData", EmitDefaultValue = false)]
        public Dictionary<string, string> MetaData { get; set; }

        /// <summary>
        /// Gets or Sets PaymentId
        /// </summary>
        [DataMember(Name = "PaymentId", EmitDefaultValue = false)]
        public int PaymentId { get; set; }

        /// <summary>
        /// Gets or Sets TransactionId
        /// </summary>
        [DataMember(Name = "TransactionId", EmitDefaultValue = false)]
        public string TransactionId { get; set; }

        /// <summary>
        /// Gets or Sets SecondaryTransactionId
        /// </summary>
        [DataMember(Name = "SecondaryTransactionId", EmitDefaultValue = false)]
        public string SecondaryTransactionId { get; set; }

        /// <summary>
        /// Gets or Sets Country
        /// </summary>
        [DataMember(Name = "Country", EmitDefaultValue = false)]
        public string Country { get; set; }

        /// <summary>
        /// Gets or Sets Company
        /// </summary>
        [DataMember(Name = "Company", EmitDefaultValue = false)]
        public string Company { get; set; }

        /// <summary>
        /// Gets or Sets OrganizationNumber
        /// </summary>
        [DataMember(Name = "OrganizationNumber", EmitDefaultValue = false)]
        public string OrganizationNumber { get; set; }

        /// <summary>
        /// Gets or Sets FirstName
        /// </summary>
        [DataMember(Name = "FirstName", EmitDefaultValue = false)]
        public string FirstName { get; set; }

        /// <summary>
        /// Gets or Sets LastName
        /// </summary>
        [DataMember(Name = "LastName", EmitDefaultValue = false)]
        public string LastName { get; set; }

        /// <summary>
        /// Gets or Sets Email
        /// </summary>
        [DataMember(Name = "Email", EmitDefaultValue = false)]
        public string Email { get; set; }

        /// <summary>
        /// Gets or Sets Address1
        /// </summary>
        [DataMember(Name = "Address1", EmitDefaultValue = false)]
        public string Address1 { get; set; }

        /// <summary>
        /// Gets or Sets Address2
        /// </summary>
        [DataMember(Name = "Address2", EmitDefaultValue = false)]
        public string Address2 { get; set; }

        /// <summary>
        /// Gets or Sets Zip
        /// </summary>
        [DataMember(Name = "Zip", EmitDefaultValue = false)]
        public string Zip { get; set; }

        /// <summary>
        /// Gets or Sets City
        /// </summary>
        [DataMember(Name = "City", EmitDefaultValue = false)]
        public string City { get; set; }

        /// <summary>
        /// Gets or Sets Region
        /// </summary>
        [DataMember(Name = "Region", EmitDefaultValue = false)]
        public string Region { get; set; }

        /// <summary>
        /// Gets or Sets Phone
        /// </summary>
        [DataMember(Name = "Phone", EmitDefaultValue = false)]
        public string Phone { get; set; }

        /// <summary>
        /// Gets or Sets MobilePhone
        /// </summary>
        [DataMember(Name = "MobilePhone", EmitDefaultValue = false)]
        public string MobilePhone { get; set; }

        /// <summary>
        /// Gets or Sets CareOf
        /// </summary>
        [DataMember(Name = "CareOf", EmitDefaultValue = false)]
        public string CareOf { get; set; }

        /// <summary>
        /// Gets or Sets ShippingId
        /// </summary>
        [DataMember(Name = "ShippingId", EmitDefaultValue = false)]
        public int ShippingId { get; set; }

        /// <summary>
        /// Gets or Sets ShippingCountry
        /// </summary>
        [DataMember(Name = "ShippingCountry", EmitDefaultValue = false)]
        public string ShippingCountry { get; set; }

        /// <summary>
        /// Gets or Sets ShippingCompany
        /// </summary>
        [DataMember(Name = "ShippingCompany", EmitDefaultValue = false)]
        public string ShippingCompany { get; set; }

        /// <summary>
        /// Gets or Sets ShippingOrganizationNumber
        /// </summary>
        [DataMember(Name = "ShippingOrganizationNumber", EmitDefaultValue = false)]
        public string ShippingOrganizationNumber { get; set; }

        /// <summary>
        /// Gets or Sets ShippingFirstName
        /// </summary>
        [DataMember(Name = "ShippingFirstName", EmitDefaultValue = false)]
        public string ShippingFirstName { get; set; }

        /// <summary>
        /// Gets or Sets ShippingLastName
        /// </summary>
        [DataMember(Name = "ShippingLastName", EmitDefaultValue = false)]
        public string ShippingLastName { get; set; }

        /// <summary>
        /// Gets or Sets ShippingEmail
        /// </summary>
        [DataMember(Name = "ShippingEmail", EmitDefaultValue = false)]
        public string ShippingEmail { get; set; }

        /// <summary>
        /// Gets or Sets ShippingAddress1
        /// </summary>
        [DataMember(Name = "ShippingAddress1", EmitDefaultValue = false)]
        public string ShippingAddress1 { get; set; }

        /// <summary>
        /// Gets or Sets ShippingAddress2
        /// </summary>
        [DataMember(Name = "ShippingAddress2", EmitDefaultValue = false)]
        public string ShippingAddress2 { get; set; }

        /// <summary>
        /// Gets or Sets ShippingZip
        /// </summary>
        [DataMember(Name = "ShippingZip", EmitDefaultValue = false)]
        public string ShippingZip { get; set; }

        /// <summary>
        /// Gets or Sets ShippingCity
        /// </summary>
        [DataMember(Name = "ShippingCity", EmitDefaultValue = false)]
        public string ShippingCity { get; set; }

        /// <summary>
        /// Gets or Sets ShippingRegion
        /// </summary>
        [DataMember(Name = "ShippingRegion", EmitDefaultValue = false)]
        public string ShippingRegion { get; set; }

        /// <summary>
        /// Gets or Sets ShippingPhone
        /// </summary>
        [DataMember(Name = "ShippingPhone", EmitDefaultValue = false)]
        public string ShippingPhone { get; set; }

        /// <summary>
        /// Gets or Sets ShippingMobilePhone
        /// </summary>
        [DataMember(Name = "ShippingMobilePhone", EmitDefaultValue = false)]
        public string ShippingMobilePhone { get; set; }

        /// <summary>
        /// Gets or Sets ShippingCareOf
        /// </summary>
        [DataMember(Name = "ShippingCareOf", EmitDefaultValue = false)]
        public string ShippingCareOf { get; set; }

        /// <summary>
        /// Gets or Sets PickupPoint
        /// </summary>
        [DataMember(Name = "PickupPoint", EmitDefaultValue = false)]
        public string PickupPoint { get; set; }

        /// <summary>
        /// Gets or Sets DesiredDeliveryDate
        /// </summary>
        [DataMember(Name = "DesiredDeliveryDate", EmitDefaultValue = false)]
        public DateTime DesiredDeliveryDate { get; set; }

        /// <summary>
        /// Gets or Sets FreightClass
        /// </summary>
        [DataMember(Name = "FreightClass", EmitDefaultValue = false)]
        public OrderFreightClass FreightClass { get; set; }

        /// <summary>
        /// Gets or Sets Sum
        /// </summary>
        [DataMember(Name = "Sum", EmitDefaultValue = false)]
        public double Sum { get; private set; }

        /// <summary>
        /// Returns false as Sum should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeSum()
        {
            return false;
        }
        /// <summary>
        /// Gets or Sets ExpectedSum
        /// </summary>
        [DataMember(Name = "ExpectedSum", EmitDefaultValue = false)]
        public double ExpectedSum { get; set; }

        /// <summary>
        /// Gets or Sets OrderValueIncVat
        /// </summary>
        [DataMember(Name = "OrderValueIncVat", EmitDefaultValue = false)]
        public double OrderValueIncVat { get; private set; }

        /// <summary>
        /// Returns false as OrderValueIncVat should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeOrderValueIncVat()
        {
            return false;
        }
        /// <summary>
        /// Gets or Sets OrderValueExVat
        /// </summary>
        [DataMember(Name = "OrderValueExVat", EmitDefaultValue = false)]
        public double OrderValueExVat { get; private set; }

        /// <summary>
        /// Returns false as OrderValueExVat should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeOrderValueExVat()
        {
            return false;
        }
        /// <summary>
        /// Gets or Sets ItemValueIncVat
        /// </summary>
        [DataMember(Name = "ItemValueIncVat", EmitDefaultValue = false)]
        public double ItemValueIncVat { get; private set; }

        /// <summary>
        /// Returns false as ItemValueIncVat should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeItemValueIncVat()
        {
            return false;
        }
        /// <summary>
        /// Gets or Sets ItemValueExVat
        /// </summary>
        [DataMember(Name = "ItemValueExVat", EmitDefaultValue = false)]
        public double ItemValueExVat { get; private set; }

        /// <summary>
        /// Returns false as ItemValueExVat should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeItemValueExVat()
        {
            return false;
        }
        /// <summary>
        /// Gets or Sets DiscountIncVat
        /// </summary>
        [DataMember(Name = "DiscountIncVat", EmitDefaultValue = false)]
        public double DiscountIncVat { get; set; }

        /// <summary>
        /// Gets or Sets DiscountExVat
        /// </summary>
        [DataMember(Name = "DiscountExVat", EmitDefaultValue = false)]
        public double DiscountExVat { get; set; }

        /// <summary>
        /// Gets or Sets PercentDiscount
        /// </summary>
        [DataMember(Name = "PercentDiscount", EmitDefaultValue = false)]
        public int PercentDiscount { get; set; }

        /// <summary>
        /// Gets or Sets Balance
        /// </summary>
        [DataMember(Name = "Balance", EmitDefaultValue = false)]
        public double Balance { get; set; }

        /// <summary>
        /// Gets or Sets ShippingFeeIncVat
        /// </summary>
        [DataMember(Name = "ShippingFeeIncVat", EmitDefaultValue = false)]
        public double ShippingFeeIncVat { get; set; }

        /// <summary>
        /// Gets or Sets ShippingFeeExVat
        /// </summary>
        [DataMember(Name = "ShippingFeeExVat", EmitDefaultValue = false)]
        public double ShippingFeeExVat { get; set; }

        /// <summary>
        /// Gets or Sets PaymentFeeIncVat
        /// </summary>
        [DataMember(Name = "PaymentFeeIncVat", EmitDefaultValue = false)]
        public double PaymentFeeIncVat { get; set; }

        /// <summary>
        /// Gets or Sets PaymentFeeExVat
        /// </summary>
        [DataMember(Name = "PaymentFeeExVat", EmitDefaultValue = false)]
        public double PaymentFeeExVat { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OrderCheckoutOrder {\n");
            sb.Append("  OrderId: ").Append(OrderId).Append("\n");
            sb.Append("  ExternalOrderId: ").Append(ExternalOrderId).Append("\n");
            sb.Append("  CartId: ").Append(CartId).Append("\n");
            sb.Append("  SessionId: ").Append(SessionId).Append("\n");
            sb.Append("  SiteId: ").Append(SiteId).Append("\n");
            sb.Append("  Currency: ").Append(Currency).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  IpAddress: ").Append(IpAddress).Append("\n");
            sb.Append("  Message: ").Append(Message).Append("\n");
            sb.Append("  InternalMessage: ").Append(InternalMessage).Append("\n");
            sb.Append("  Locale: ").Append(Locale).Append("\n");
            sb.Append("  Rows: ").Append(Rows).Append("\n");
            sb.Append("  CampaignId: ").Append(CampaignId).Append("\n");
            sb.Append("  CampaignCode: ").Append(CampaignCode).Append("\n");
            sb.Append("  CampaignName: ").Append(CampaignName).Append("\n");
            sb.Append("  CampaignIds: ").Append(CampaignIds).Append("\n");
            sb.Append("  CampaignNames: ").Append(CampaignNames).Append("\n");
            sb.Append("  CustomerId: ").Append(CustomerId).Append("\n");
            sb.Append("  CustomerTypeId: ").Append(CustomerTypeId).Append("\n");
            sb.Append("  Gender: ").Append(Gender).Append("\n");
            sb.Append("  DateOfBirth: ").Append(DateOfBirth).Append("\n");
            sb.Append("  PersonalId: ").Append(PersonalId).Append("\n");
            sb.Append("  UserAgent: ").Append(UserAgent).Append("\n");
            sb.Append("  MetaData: ").Append(MetaData).Append("\n");
            sb.Append("  PaymentId: ").Append(PaymentId).Append("\n");
            sb.Append("  TransactionId: ").Append(TransactionId).Append("\n");
            sb.Append("  SecondaryTransactionId: ").Append(SecondaryTransactionId).Append("\n");
            sb.Append("  Country: ").Append(Country).Append("\n");
            sb.Append("  Company: ").Append(Company).Append("\n");
            sb.Append("  OrganizationNumber: ").Append(OrganizationNumber).Append("\n");
            sb.Append("  FirstName: ").Append(FirstName).Append("\n");
            sb.Append("  LastName: ").Append(LastName).Append("\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  Address1: ").Append(Address1).Append("\n");
            sb.Append("  Address2: ").Append(Address2).Append("\n");
            sb.Append("  Zip: ").Append(Zip).Append("\n");
            sb.Append("  City: ").Append(City).Append("\n");
            sb.Append("  Region: ").Append(Region).Append("\n");
            sb.Append("  Phone: ").Append(Phone).Append("\n");
            sb.Append("  MobilePhone: ").Append(MobilePhone).Append("\n");
            sb.Append("  CareOf: ").Append(CareOf).Append("\n");
            sb.Append("  ShippingId: ").Append(ShippingId).Append("\n");
            sb.Append("  ShippingCountry: ").Append(ShippingCountry).Append("\n");
            sb.Append("  ShippingCompany: ").Append(ShippingCompany).Append("\n");
            sb.Append("  ShippingOrganizationNumber: ").Append(ShippingOrganizationNumber).Append("\n");
            sb.Append("  ShippingFirstName: ").Append(ShippingFirstName).Append("\n");
            sb.Append("  ShippingLastName: ").Append(ShippingLastName).Append("\n");
            sb.Append("  ShippingEmail: ").Append(ShippingEmail).Append("\n");
            sb.Append("  ShippingAddress1: ").Append(ShippingAddress1).Append("\n");
            sb.Append("  ShippingAddress2: ").Append(ShippingAddress2).Append("\n");
            sb.Append("  ShippingZip: ").Append(ShippingZip).Append("\n");
            sb.Append("  ShippingCity: ").Append(ShippingCity).Append("\n");
            sb.Append("  ShippingRegion: ").Append(ShippingRegion).Append("\n");
            sb.Append("  ShippingPhone: ").Append(ShippingPhone).Append("\n");
            sb.Append("  ShippingMobilePhone: ").Append(ShippingMobilePhone).Append("\n");
            sb.Append("  ShippingCareOf: ").Append(ShippingCareOf).Append("\n");
            sb.Append("  PickupPoint: ").Append(PickupPoint).Append("\n");
            sb.Append("  DesiredDeliveryDate: ").Append(DesiredDeliveryDate).Append("\n");
            sb.Append("  FreightClass: ").Append(FreightClass).Append("\n");
            sb.Append("  Sum: ").Append(Sum).Append("\n");
            sb.Append("  ExpectedSum: ").Append(ExpectedSum).Append("\n");
            sb.Append("  OrderValueIncVat: ").Append(OrderValueIncVat).Append("\n");
            sb.Append("  OrderValueExVat: ").Append(OrderValueExVat).Append("\n");
            sb.Append("  ItemValueIncVat: ").Append(ItemValueIncVat).Append("\n");
            sb.Append("  ItemValueExVat: ").Append(ItemValueExVat).Append("\n");
            sb.Append("  DiscountIncVat: ").Append(DiscountIncVat).Append("\n");
            sb.Append("  DiscountExVat: ").Append(DiscountExVat).Append("\n");
            sb.Append("  PercentDiscount: ").Append(PercentDiscount).Append("\n");
            sb.Append("  Balance: ").Append(Balance).Append("\n");
            sb.Append("  ShippingFeeIncVat: ").Append(ShippingFeeIncVat).Append("\n");
            sb.Append("  ShippingFeeExVat: ").Append(ShippingFeeExVat).Append("\n");
            sb.Append("  PaymentFeeIncVat: ").Append(PaymentFeeIncVat).Append("\n");
            sb.Append("  PaymentFeeExVat: ").Append(PaymentFeeExVat).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as OrderCheckoutOrder);
        }

        /// <summary>
        /// Returns true if OrderCheckoutOrder instances are equal
        /// </summary>
        /// <param name="input">Instance of OrderCheckoutOrder to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(OrderCheckoutOrder input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.OrderId == input.OrderId ||
                    (this.OrderId != null &&
                    this.OrderId.Equals(input.OrderId))
                ) && 
                (
                    this.ExternalOrderId == input.ExternalOrderId ||
                    (this.ExternalOrderId != null &&
                    this.ExternalOrderId.Equals(input.ExternalOrderId))
                ) && 
                (
                    this.CartId == input.CartId ||
                    (this.CartId != null &&
                    this.CartId.Equals(input.CartId))
                ) && 
                (
                    this.SessionId == input.SessionId ||
                    (this.SessionId != null &&
                    this.SessionId.Equals(input.SessionId))
                ) && 
                (
                    this.SiteId == input.SiteId ||
                    this.SiteId.Equals(input.SiteId)
                ) && 
                (
                    this.Currency == input.Currency ||
                    (this.Currency != null &&
                    this.Currency.Equals(input.Currency))
                ) && 
                (
                    this.Status == input.Status ||
                    (this.Status != null &&
                    this.Status.Equals(input.Status))
                ) && 
                (
                    this.IpAddress == input.IpAddress ||
                    (this.IpAddress != null &&
                    this.IpAddress.Equals(input.IpAddress))
                ) && 
                (
                    this.Message == input.Message ||
                    (this.Message != null &&
                    this.Message.Equals(input.Message))
                ) && 
                (
                    this.InternalMessage == input.InternalMessage ||
                    (this.InternalMessage != null &&
                    this.InternalMessage.Equals(input.InternalMessage))
                ) && 
                (
                    this.Locale == input.Locale ||
                    (this.Locale != null &&
                    this.Locale.Equals(input.Locale))
                ) && 
                (
                    this.Rows == input.Rows ||
                    this.Rows != null &&
                    input.Rows != null &&
                    this.Rows.SequenceEqual(input.Rows)
                ) && 
                (
                    this.CampaignId == input.CampaignId ||
                    this.CampaignId.Equals(input.CampaignId)
                ) && 
                (
                    this.CampaignCode == input.CampaignCode ||
                    (this.CampaignCode != null &&
                    this.CampaignCode.Equals(input.CampaignCode))
                ) && 
                (
                    this.CampaignName == input.CampaignName ||
                    (this.CampaignName != null &&
                    this.CampaignName.Equals(input.CampaignName))
                ) && 
                (
                    this.CampaignIds == input.CampaignIds ||
                    this.CampaignIds != null &&
                    input.CampaignIds != null &&
                    this.CampaignIds.SequenceEqual(input.CampaignIds)
                ) && 
                (
                    this.CampaignNames == input.CampaignNames ||
                    this.CampaignNames != null &&
                    input.CampaignNames != null &&
                    this.CampaignNames.SequenceEqual(input.CampaignNames)
                ) && 
                (
                    this.CustomerId == input.CustomerId ||
                    this.CustomerId.Equals(input.CustomerId)
                ) && 
                (
                    this.CustomerTypeId == input.CustomerTypeId ||
                    this.CustomerTypeId.Equals(input.CustomerTypeId)
                ) && 
                (
                    this.Gender == input.Gender ||
                    this.Gender.Equals(input.Gender)
                ) && 
                (
                    this.DateOfBirth == input.DateOfBirth ||
                    (this.DateOfBirth != null &&
                    this.DateOfBirth.Equals(input.DateOfBirth))
                ) && 
                (
                    this.PersonalId == input.PersonalId ||
                    (this.PersonalId != null &&
                    this.PersonalId.Equals(input.PersonalId))
                ) && 
                (
                    this.UserAgent == input.UserAgent ||
                    (this.UserAgent != null &&
                    this.UserAgent.Equals(input.UserAgent))
                ) && 
                (
                    this.MetaData == input.MetaData ||
                    this.MetaData != null &&
                    input.MetaData != null &&
                    this.MetaData.SequenceEqual(input.MetaData)
                ) && 
                (
                    this.PaymentId == input.PaymentId ||
                    this.PaymentId.Equals(input.PaymentId)
                ) && 
                (
                    this.TransactionId == input.TransactionId ||
                    (this.TransactionId != null &&
                    this.TransactionId.Equals(input.TransactionId))
                ) && 
                (
                    this.SecondaryTransactionId == input.SecondaryTransactionId ||
                    (this.SecondaryTransactionId != null &&
                    this.SecondaryTransactionId.Equals(input.SecondaryTransactionId))
                ) && 
                (
                    this.Country == input.Country ||
                    (this.Country != null &&
                    this.Country.Equals(input.Country))
                ) && 
                (
                    this.Company == input.Company ||
                    (this.Company != null &&
                    this.Company.Equals(input.Company))
                ) && 
                (
                    this.OrganizationNumber == input.OrganizationNumber ||
                    (this.OrganizationNumber != null &&
                    this.OrganizationNumber.Equals(input.OrganizationNumber))
                ) && 
                (
                    this.FirstName == input.FirstName ||
                    (this.FirstName != null &&
                    this.FirstName.Equals(input.FirstName))
                ) && 
                (
                    this.LastName == input.LastName ||
                    (this.LastName != null &&
                    this.LastName.Equals(input.LastName))
                ) && 
                (
                    this.Email == input.Email ||
                    (this.Email != null &&
                    this.Email.Equals(input.Email))
                ) && 
                (
                    this.Address1 == input.Address1 ||
                    (this.Address1 != null &&
                    this.Address1.Equals(input.Address1))
                ) && 
                (
                    this.Address2 == input.Address2 ||
                    (this.Address2 != null &&
                    this.Address2.Equals(input.Address2))
                ) && 
                (
                    this.Zip == input.Zip ||
                    (this.Zip != null &&
                    this.Zip.Equals(input.Zip))
                ) && 
                (
                    this.City == input.City ||
                    (this.City != null &&
                    this.City.Equals(input.City))
                ) && 
                (
                    this.Region == input.Region ||
                    (this.Region != null &&
                    this.Region.Equals(input.Region))
                ) && 
                (
                    this.Phone == input.Phone ||
                    (this.Phone != null &&
                    this.Phone.Equals(input.Phone))
                ) && 
                (
                    this.MobilePhone == input.MobilePhone ||
                    (this.MobilePhone != null &&
                    this.MobilePhone.Equals(input.MobilePhone))
                ) && 
                (
                    this.CareOf == input.CareOf ||
                    (this.CareOf != null &&
                    this.CareOf.Equals(input.CareOf))
                ) && 
                (
                    this.ShippingId == input.ShippingId ||
                    this.ShippingId.Equals(input.ShippingId)
                ) && 
                (
                    this.ShippingCountry == input.ShippingCountry ||
                    (this.ShippingCountry != null &&
                    this.ShippingCountry.Equals(input.ShippingCountry))
                ) && 
                (
                    this.ShippingCompany == input.ShippingCompany ||
                    (this.ShippingCompany != null &&
                    this.ShippingCompany.Equals(input.ShippingCompany))
                ) && 
                (
                    this.ShippingOrganizationNumber == input.ShippingOrganizationNumber ||
                    (this.ShippingOrganizationNumber != null &&
                    this.ShippingOrganizationNumber.Equals(input.ShippingOrganizationNumber))
                ) && 
                (
                    this.ShippingFirstName == input.ShippingFirstName ||
                    (this.ShippingFirstName != null &&
                    this.ShippingFirstName.Equals(input.ShippingFirstName))
                ) && 
                (
                    this.ShippingLastName == input.ShippingLastName ||
                    (this.ShippingLastName != null &&
                    this.ShippingLastName.Equals(input.ShippingLastName))
                ) && 
                (
                    this.ShippingEmail == input.ShippingEmail ||
                    (this.ShippingEmail != null &&
                    this.ShippingEmail.Equals(input.ShippingEmail))
                ) && 
                (
                    this.ShippingAddress1 == input.ShippingAddress1 ||
                    (this.ShippingAddress1 != null &&
                    this.ShippingAddress1.Equals(input.ShippingAddress1))
                ) && 
                (
                    this.ShippingAddress2 == input.ShippingAddress2 ||
                    (this.ShippingAddress2 != null &&
                    this.ShippingAddress2.Equals(input.ShippingAddress2))
                ) && 
                (
                    this.ShippingZip == input.ShippingZip ||
                    (this.ShippingZip != null &&
                    this.ShippingZip.Equals(input.ShippingZip))
                ) && 
                (
                    this.ShippingCity == input.ShippingCity ||
                    (this.ShippingCity != null &&
                    this.ShippingCity.Equals(input.ShippingCity))
                ) && 
                (
                    this.ShippingRegion == input.ShippingRegion ||
                    (this.ShippingRegion != null &&
                    this.ShippingRegion.Equals(input.ShippingRegion))
                ) && 
                (
                    this.ShippingPhone == input.ShippingPhone ||
                    (this.ShippingPhone != null &&
                    this.ShippingPhone.Equals(input.ShippingPhone))
                ) && 
                (
                    this.ShippingMobilePhone == input.ShippingMobilePhone ||
                    (this.ShippingMobilePhone != null &&
                    this.ShippingMobilePhone.Equals(input.ShippingMobilePhone))
                ) && 
                (
                    this.ShippingCareOf == input.ShippingCareOf ||
                    (this.ShippingCareOf != null &&
                    this.ShippingCareOf.Equals(input.ShippingCareOf))
                ) && 
                (
                    this.PickupPoint == input.PickupPoint ||
                    (this.PickupPoint != null &&
                    this.PickupPoint.Equals(input.PickupPoint))
                ) && 
                (
                    this.DesiredDeliveryDate == input.DesiredDeliveryDate ||
                    (this.DesiredDeliveryDate != null &&
                    this.DesiredDeliveryDate.Equals(input.DesiredDeliveryDate))
                ) && 
                (
                    this.FreightClass == input.FreightClass ||
                    (this.FreightClass != null &&
                    this.FreightClass.Equals(input.FreightClass))
                ) && 
                (
                    this.Sum == input.Sum ||
                    this.Sum.Equals(input.Sum)
                ) && 
                (
                    this.ExpectedSum == input.ExpectedSum ||
                    this.ExpectedSum.Equals(input.ExpectedSum)
                ) && 
                (
                    this.OrderValueIncVat == input.OrderValueIncVat ||
                    this.OrderValueIncVat.Equals(input.OrderValueIncVat)
                ) && 
                (
                    this.OrderValueExVat == input.OrderValueExVat ||
                    this.OrderValueExVat.Equals(input.OrderValueExVat)
                ) && 
                (
                    this.ItemValueIncVat == input.ItemValueIncVat ||
                    this.ItemValueIncVat.Equals(input.ItemValueIncVat)
                ) && 
                (
                    this.ItemValueExVat == input.ItemValueExVat ||
                    this.ItemValueExVat.Equals(input.ItemValueExVat)
                ) && 
                (
                    this.DiscountIncVat == input.DiscountIncVat ||
                    this.DiscountIncVat.Equals(input.DiscountIncVat)
                ) && 
                (
                    this.DiscountExVat == input.DiscountExVat ||
                    this.DiscountExVat.Equals(input.DiscountExVat)
                ) && 
                (
                    this.PercentDiscount == input.PercentDiscount ||
                    this.PercentDiscount.Equals(input.PercentDiscount)
                ) && 
                (
                    this.Balance == input.Balance ||
                    this.Balance.Equals(input.Balance)
                ) && 
                (
                    this.ShippingFeeIncVat == input.ShippingFeeIncVat ||
                    this.ShippingFeeIncVat.Equals(input.ShippingFeeIncVat)
                ) && 
                (
                    this.ShippingFeeExVat == input.ShippingFeeExVat ||
                    this.ShippingFeeExVat.Equals(input.ShippingFeeExVat)
                ) && 
                (
                    this.PaymentFeeIncVat == input.PaymentFeeIncVat ||
                    this.PaymentFeeIncVat.Equals(input.PaymentFeeIncVat)
                ) && 
                (
                    this.PaymentFeeExVat == input.PaymentFeeExVat ||
                    this.PaymentFeeExVat.Equals(input.PaymentFeeExVat)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.OrderId != null)
                {
                    hashCode = (hashCode * 59) + this.OrderId.GetHashCode();
                }
                if (this.ExternalOrderId != null)
                {
                    hashCode = (hashCode * 59) + this.ExternalOrderId.GetHashCode();
                }
                if (this.CartId != null)
                {
                    hashCode = (hashCode * 59) + this.CartId.GetHashCode();
                }
                if (this.SessionId != null)
                {
                    hashCode = (hashCode * 59) + this.SessionId.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.SiteId.GetHashCode();
                if (this.Currency != null)
                {
                    hashCode = (hashCode * 59) + this.Currency.GetHashCode();
                }
                if (this.Status != null)
                {
                    hashCode = (hashCode * 59) + this.Status.GetHashCode();
                }
                if (this.IpAddress != null)
                {
                    hashCode = (hashCode * 59) + this.IpAddress.GetHashCode();
                }
                if (this.Message != null)
                {
                    hashCode = (hashCode * 59) + this.Message.GetHashCode();
                }
                if (this.InternalMessage != null)
                {
                    hashCode = (hashCode * 59) + this.InternalMessage.GetHashCode();
                }
                if (this.Locale != null)
                {
                    hashCode = (hashCode * 59) + this.Locale.GetHashCode();
                }
                if (this.Rows != null)
                {
                    hashCode = (hashCode * 59) + this.Rows.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.CampaignId.GetHashCode();
                if (this.CampaignCode != null)
                {
                    hashCode = (hashCode * 59) + this.CampaignCode.GetHashCode();
                }
                if (this.CampaignName != null)
                {
                    hashCode = (hashCode * 59) + this.CampaignName.GetHashCode();
                }
                if (this.CampaignIds != null)
                {
                    hashCode = (hashCode * 59) + this.CampaignIds.GetHashCode();
                }
                if (this.CampaignNames != null)
                {
                    hashCode = (hashCode * 59) + this.CampaignNames.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.CustomerId.GetHashCode();
                hashCode = (hashCode * 59) + this.CustomerTypeId.GetHashCode();
                hashCode = (hashCode * 59) + this.Gender.GetHashCode();
                if (this.DateOfBirth != null)
                {
                    hashCode = (hashCode * 59) + this.DateOfBirth.GetHashCode();
                }
                if (this.PersonalId != null)
                {
                    hashCode = (hashCode * 59) + this.PersonalId.GetHashCode();
                }
                if (this.UserAgent != null)
                {
                    hashCode = (hashCode * 59) + this.UserAgent.GetHashCode();
                }
                if (this.MetaData != null)
                {
                    hashCode = (hashCode * 59) + this.MetaData.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.PaymentId.GetHashCode();
                if (this.TransactionId != null)
                {
                    hashCode = (hashCode * 59) + this.TransactionId.GetHashCode();
                }
                if (this.SecondaryTransactionId != null)
                {
                    hashCode = (hashCode * 59) + this.SecondaryTransactionId.GetHashCode();
                }
                if (this.Country != null)
                {
                    hashCode = (hashCode * 59) + this.Country.GetHashCode();
                }
                if (this.Company != null)
                {
                    hashCode = (hashCode * 59) + this.Company.GetHashCode();
                }
                if (this.OrganizationNumber != null)
                {
                    hashCode = (hashCode * 59) + this.OrganizationNumber.GetHashCode();
                }
                if (this.FirstName != null)
                {
                    hashCode = (hashCode * 59) + this.FirstName.GetHashCode();
                }
                if (this.LastName != null)
                {
                    hashCode = (hashCode * 59) + this.LastName.GetHashCode();
                }
                if (this.Email != null)
                {
                    hashCode = (hashCode * 59) + this.Email.GetHashCode();
                }
                if (this.Address1 != null)
                {
                    hashCode = (hashCode * 59) + this.Address1.GetHashCode();
                }
                if (this.Address2 != null)
                {
                    hashCode = (hashCode * 59) + this.Address2.GetHashCode();
                }
                if (this.Zip != null)
                {
                    hashCode = (hashCode * 59) + this.Zip.GetHashCode();
                }
                if (this.City != null)
                {
                    hashCode = (hashCode * 59) + this.City.GetHashCode();
                }
                if (this.Region != null)
                {
                    hashCode = (hashCode * 59) + this.Region.GetHashCode();
                }
                if (this.Phone != null)
                {
                    hashCode = (hashCode * 59) + this.Phone.GetHashCode();
                }
                if (this.MobilePhone != null)
                {
                    hashCode = (hashCode * 59) + this.MobilePhone.GetHashCode();
                }
                if (this.CareOf != null)
                {
                    hashCode = (hashCode * 59) + this.CareOf.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.ShippingId.GetHashCode();
                if (this.ShippingCountry != null)
                {
                    hashCode = (hashCode * 59) + this.ShippingCountry.GetHashCode();
                }
                if (this.ShippingCompany != null)
                {
                    hashCode = (hashCode * 59) + this.ShippingCompany.GetHashCode();
                }
                if (this.ShippingOrganizationNumber != null)
                {
                    hashCode = (hashCode * 59) + this.ShippingOrganizationNumber.GetHashCode();
                }
                if (this.ShippingFirstName != null)
                {
                    hashCode = (hashCode * 59) + this.ShippingFirstName.GetHashCode();
                }
                if (this.ShippingLastName != null)
                {
                    hashCode = (hashCode * 59) + this.ShippingLastName.GetHashCode();
                }
                if (this.ShippingEmail != null)
                {
                    hashCode = (hashCode * 59) + this.ShippingEmail.GetHashCode();
                }
                if (this.ShippingAddress1 != null)
                {
                    hashCode = (hashCode * 59) + this.ShippingAddress1.GetHashCode();
                }
                if (this.ShippingAddress2 != null)
                {
                    hashCode = (hashCode * 59) + this.ShippingAddress2.GetHashCode();
                }
                if (this.ShippingZip != null)
                {
                    hashCode = (hashCode * 59) + this.ShippingZip.GetHashCode();
                }
                if (this.ShippingCity != null)
                {
                    hashCode = (hashCode * 59) + this.ShippingCity.GetHashCode();
                }
                if (this.ShippingRegion != null)
                {
                    hashCode = (hashCode * 59) + this.ShippingRegion.GetHashCode();
                }
                if (this.ShippingPhone != null)
                {
                    hashCode = (hashCode * 59) + this.ShippingPhone.GetHashCode();
                }
                if (this.ShippingMobilePhone != null)
                {
                    hashCode = (hashCode * 59) + this.ShippingMobilePhone.GetHashCode();
                }
                if (this.ShippingCareOf != null)
                {
                    hashCode = (hashCode * 59) + this.ShippingCareOf.GetHashCode();
                }
                if (this.PickupPoint != null)
                {
                    hashCode = (hashCode * 59) + this.PickupPoint.GetHashCode();
                }
                if (this.DesiredDeliveryDate != null)
                {
                    hashCode = (hashCode * 59) + this.DesiredDeliveryDate.GetHashCode();
                }
                if (this.FreightClass != null)
                {
                    hashCode = (hashCode * 59) + this.FreightClass.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.Sum.GetHashCode();
                hashCode = (hashCode * 59) + this.ExpectedSum.GetHashCode();
                hashCode = (hashCode * 59) + this.OrderValueIncVat.GetHashCode();
                hashCode = (hashCode * 59) + this.OrderValueExVat.GetHashCode();
                hashCode = (hashCode * 59) + this.ItemValueIncVat.GetHashCode();
                hashCode = (hashCode * 59) + this.ItemValueExVat.GetHashCode();
                hashCode = (hashCode * 59) + this.DiscountIncVat.GetHashCode();
                hashCode = (hashCode * 59) + this.DiscountExVat.GetHashCode();
                hashCode = (hashCode * 59) + this.PercentDiscount.GetHashCode();
                hashCode = (hashCode * 59) + this.Balance.GetHashCode();
                hashCode = (hashCode * 59) + this.ShippingFeeIncVat.GetHashCode();
                hashCode = (hashCode * 59) + this.ShippingFeeExVat.GetHashCode();
                hashCode = (hashCode * 59) + this.PaymentFeeIncVat.GetHashCode();
                hashCode = (hashCode * 59) + this.PaymentFeeExVat.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
